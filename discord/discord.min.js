class DiscordWidget extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n      <style>\n.discordText {\n  font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;\n  margin: auto;\n  text-align: left;\n  display: inline-block;\n}\n\n#discord-widget {\n  background: linear-gradient(#1f1d2e 0 40%, #26233a 40% 100%);\n  padding: 20px;\n  border: 8px solid #191724;\n  margin: 5px;\n  box-shadow: 0 0 10px black;\n  text-align: left;\n}\n\n#discord-widget * {\n  vertical-align: middle;\n  color: #e0def4;\n}\n\n#discord-pfp {\n  margin: 10px;\n  width: 50px;\n  border: 3px solid #1f1d2e;\n}\n\n#discord-username {\n  display: inline-block;\n  color: grey;\n}\n\n#discord-rpc {\n  margin-top: 35px;\n  position: relative;\n}\n\n#discord-activity-img {\n  margin: 10px;\n  width: 100px;\n}\n\n#discord-activity-miniimg {\n  height: 40px;\n  width: 40px;\n  display: block;\n  position: absolute;\n  top: 75px;\n  left: 75px;\n}\n\n#discord-activity-details,\n#discord-activity-state {\n  font-size: 12px !important;\n}\n\n      </style>\n<div id="discord-widget">\n  <img\n    src="https://api.lanyard.rest/850319718920224798.png"\n    alt="discord pfp"\n    id="discord-pfp"\n  />\n  <div id="discord-info" class="discordText">\n    <h2 id="discord-name" class="discordText">Loading...</h2>\n    <h3 id="discord-username" class="discordText">Loading...</h3>\n    <br />\n    <p id="discord-status" class="discordText">Loading...</p>\n  </div>\n  <div id="discord-rpc">\n    <img\n      src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif"\n      alt=""\n      id="discord-activity-img"\n      height="100"\n      width="100"\n    />\n    <img\n      src="http://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif"\n      alt=""\n      id="discord-activity-miniimg"\n      height="25"\n      width="25"\n    />\n    <div id="discord-activity" class="discordText">\n      <h2 id="discord-activity-name" class="discordText">Loading...</h2>\n      <br />\n      <p id="discord-activity-details" class="discordText">Loading...</p>\n      <br />\n      <p id="discord-activity-state" class="discordText">Loading...</p>\n    </div>\n  </div>\n</div>\n\n    '}async connectedCallback(){const discord_ID=this.getAttribute("discord-id")||"850319718920224798",response=await fetch(`https://api.lanyard.rest/v1/users/${discord_ID}`),{data:json}=await response.json(),{discord_user:{global_name:global_name,username:username},discord_status:online,activities:activities=[]}=json,elements={pfp:this.shadowRoot.querySelector("#discord-pfp"),discordName:this.shadowRoot.querySelector("#discord-name"),discordUsername:this.shadowRoot.querySelector("#discord-username"),discordStatus:this.shadowRoot.querySelector("#discord-status"),discordRPC:this.shadowRoot.querySelector("#discord-rpc"),discordActivityName:this.shadowRoot.querySelector("#discord-activity-name"),discordActivityImage:this.shadowRoot.querySelector("#discord-activity-img"),discordActivitySmallImage:this.shadowRoot.querySelector("#discord-activity-miniimg"),discordActivityDetails:this.shadowRoot.querySelector("#discord-activity-details"),discordActivityState:this.shadowRoot.querySelector("#discord-activity-state")};if(elements.discordName.textContent=global_name,elements.discordUsername.textContent=`(${username})`,"offline"===online)return elements.discordStatus.textContent="Offline",void elements.discordRPC.remove();const hasNonCustomId=activities.some(activity=>"custom"!==activity.id);if(activities.length&&activities[0].emoji?elements.discordStatus.textContent=`${activities[0].emoji.name} ${activities[0].state}`:elements.discordStatus.textContent=activities[0].state||"",hasNonCustomId){const{assets:assets,name:name,details:details,state:state}=activities[1]||{};assets&&assets.large_image&&(elements.discordActivityImage.src=`https://${assets.large_image.split("/https/")[1]}`),assets&&assets.small_image&&(elements.discordActivitySmallImage.src=`https://${assets.small_image.split("/https/")[1]}`),elements.discordActivityName.textContent=name||"",elements.discordActivityDetails.textContent=details||"",elements.discordActivityState.textContent=state||""}else elements.discordRPC.remove();const statusColorMap={online:"#a6e3a1",idle:"#f6c177",dnd:"#eb6f92"};elements.pfp.style.borderColor=statusColorMap[online]||""}}customElements.define("discord-widget",DiscordWidget);
//# sourceMappingURL=discord.min.js.map