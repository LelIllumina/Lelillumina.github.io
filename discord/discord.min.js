class DiscordWidget extends HTMLElement{constructor(){super(),this.innerHTML='\n      <link rel="stylesheet" href="/discord/discord.min.css">\n      <div id="discord-widget">\n        <img\n          src="https://api.lanyard.rest/850319718920224798.png"\n          alt="discord pfp"\n          id="discord-pfp"\n        />\n        <div id="discord-info" class="discordText">\n          <h2 id="discord-name" class="discordText">Loading...</h2>\n          <h3 id="discord-username" class="discordText">Loading...</h3>\n          <br />\n          <p id="discord-status" class="discordText">Loading...</p>\n        </div>\n        <div id="discord-rpc">\n          <img\n            src="https://lel.nekoweb.org/images/transparent.webp"\n            alt=""\n            id="discord-activity-img"\n            height="100"\n            width="100"\n          />\n          <img\n            src="https://lel.nekoweb.org/images/transparent.webp"\n            alt=""\n            id="discord-activity-miniimg"\n            height="25"\n            width="25"\n          />\n          <div id="discord-activity" class="discordText">\n            <h2 id="discord-activity-name" class="discordText">Loading...</h2>\n            <br />\n            <p id="discord-activity-details" class="discordText">Loading...</p>\n            <br />\n            <p id="discord-activity-state" class="discordText">Loading...</p>\n          </div>\n        </div>\n      </div>\n    '}async connectedCallback(){const discord_ID=this.getAttribute("discord-id")||"850319718920224798",response=await fetch(`https://api.lanyard.rest/v1/users/${discord_ID}`),{data:json}=await response.json(),{discord_user:{global_name:global_name,username:username},discord_status:online,activities:activities=[]}=json,elements={pfp:this.querySelector("#discord-pfp"),discordName:this.querySelector("#discord-name"),discordUsername:this.querySelector("#discord-username"),discordStatus:this.querySelector("#discord-status"),discordRPC:this.querySelector("#discord-rpc"),discordActivityName:this.querySelector("#discord-activity-name"),discordActivityImage:this.querySelector("#discord-activity-img"),discordActivitySmallImage:this.querySelector("#discord-activity-miniimg"),discordActivityDetails:this.querySelector("#discord-activity-details"),discordActivityState:this.querySelector("#discord-activity-state")};if(elements.discordName.textContent=global_name,elements.discordUsername.textContent=`(${username})`,"offline"===online)return elements.discordStatus.textContent="Offline",void elements.discordRPC.remove();const hasNonCustomId=activities.some(activity=>"custom"!==activity.id);if(activities.length&&activities[0].emoji?elements.discordStatus.textContent=`${activities[0].emoji.name} ${activities[0].state}`:elements.discordStatus.textContent=activities[0].state||"",hasNonCustomId){const{assets:assets,name:name,details:details,state:state}=activities[1]||{};assets&&assets.large_image&&(elements.discordActivityImage.src=`https://${assets.large_image.split("/https/")[1]}`),assets&&assets.small_image&&(elements.discordActivitySmallImage.src=`https://${assets.small_image.split("/https/")[1]}`),elements.discordActivityName.textContent=name||"",elements.discordActivityDetails.textContent=details||"",elements.discordActivityState.textContent=state||""}else elements.discordRPC.remove();const statusColorMap={online:"#a6e3a1",idle:"#f6c177",dnd:"#eb6f92"};elements.pfp.style.borderColor=statusColorMap[online]||""}}customElements.define("discord-widget",DiscordWidget);
//# sourceMappingURL=discord.min.js.map