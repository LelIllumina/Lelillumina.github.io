---
type Props = Record<string, never>;
import { getCollection } from "astro:content";
const isArchive = new URL(Astro.request.url).pathname.includes("/archive");
const collectionName = isArchive ? "archive" : "blog";
const posts = await getCollection(collectionName);

// Sort posts by date
const sortedPosts = posts.sort(
  (a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime(),
);
---

<section id="sidebar" transition:persist>
  <div>
    <h2>{isArchive ? "Archives:" : "Blogs:"}</h2>
    <ul style="padding: 0;">
      {
        sortedPosts.map((post) => (
          <li style="margin: 16px 0">
            <a
              class="index-link"
              href={`/blogs/${post.id}`}
              data-astro-prefetch
            >
              {post.data.title}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
  <div>
    <h2>Links:</h2>
    <p>
      {
        isArchive ? (
          // On archive page, link back to the blog home
          <a href="/blogs">Blogs</a>
        ) : (
          // On blog page, link to the archive page
          <a href="/blogs/archive">Archive</a>
        )
      }
      <p>
        <a href="https://nekoweb.org">The Nekowebs</a>
      </p>
      <p><a href="/">Back to the Main page</a></p>
    </p>
  </div>
</section>
