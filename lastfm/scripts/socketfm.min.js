import{users}from"./users.min.js";const BASE_URL="wss://scrobbled.tepiloxtl.net/ws/get_last_track/";let notPlaying=0;const totalCounter=document.getElementById("total");totalCounter.textContent=users.length;const connectWebSocket=username=>new Promise((function(resolve,reject){const url=`${BASE_URL}${username}`,socket=new WebSocket(url);socket.onopen=function(){resolve(socket)},socket.onmessage=event=>{const data=JSON.parse(event.data),track=data.recenttracks.track[0],userOnline="true"===track.nowplaying;hydrateDiv(username,track,userOnline);const onlineCounter=document.getElementById("counter"),scrobbling=document.getElementById("scrobbling"),online=scrobbling.querySelectorAll(".container").length;onlineCounter.textContent=online},socket.onerror=function(error){reject(error)}}));function createEmptyDiv(username,site){const loadingDiv=document.getElementById("loading"),fragment=document.createDocumentFragment(),newUserDiv=document.createElement("div");newUserDiv.id=username,newUserDiv.className="container",newUserDiv.innerHTML=`\n    <div id="${username}-songBox" class="listening">\n      <img id="${username}-trackCover" class="trackCover" src="/images/NekoFM/loading.png" alt="" height="150" width="150"/>\n      <div id="${username}-trackInfo" class="trackInfo">\n        <h3 id="${username}-siteName" class="siteName"><a href="https://last.fm/user/${username}" target="_blank">${username}</a> â€¢ <a href="https://${site}" target="_blank">${site}</a></h3>\n        <h2 id="${username}-trackName" class="trackName">Loading...</h2>\n        <p id="${username}-artistName" class="artistName">Loading...</p>\n        <a id="${username}-searchButton" class="searchButton" href="" target="_blank">Search Song</a>\n      </div>\n    </div>\n`,fragment.appendChild(newUserDiv),loadingDiv.appendChild(fragment)}function hydrateDiv(username,track,userOnline){const scrobbling=document.getElementById("scrobbling"),offline=document.getElementById("offline"),userDiv=document.getElementById(username);let coverImgUrl=track.album.isnsfw?nsfwFilter(track,username):track.image[2]["#text"];"https://lastfm.freetls.fastly.net/i/u/174s/2a96cbd8b46e442fc41c2b86b821562f.png"===coverImgUrl&&(coverImgUrl="/images/NekoFM/NoArt.png");const coverImgEl=userDiv.querySelector(`#${username}-trackCover`),trackNameEl=userDiv.querySelector(`#${username}-trackName`),artistNameEl=userDiv.querySelector(`#${username}-artistName`);if(coverImgEl.src=coverImgUrl||"/images/NekoFM/NoArt.png",coverImgEl.alt=track.name,trackNameEl.textContent=track.name,artistNameEl.textContent=track.artist.name,userOnline?scrobbling.appendChild(userDiv):(offline.appendChild(userDiv),notPlaying++),notPlaying===users.length)scrobbling.innerHTML="<p>No one's listening to anything right now</p>";else{const pTag=scrobbling.querySelector("p");pTag&&pTag.remove()}}function nsfwFilter(track,username){const nsfwSetting=localStorage.nsfw,defaultCoverImg=track.image[2]["#text"],trackCover=document.getElementById(`${username}-trackCover`);switch(nsfwSetting){case"off":return defaultCoverImg;case"blurred":return setTimeout(()=>{trackCover.style.filter="blur(10px)"},1),defaultCoverImg;case"removed":default:return"/images/NekoFM/NSFWCOVER.png"}}async function setupWebSocketConnections(users){try{await users.forEach(([username,site])=>{createEmptyDiv(username,site)});const connections=await Promise.all(users.map(([username])=>connectWebSocket(username)));console.log("All WebSocket connections established:",connections)}catch(error){console.error("Error connecting to WebSockets:",error)}}setupWebSocketConnections(users);
//# sourceMappingURL=socketfm.min.js.map